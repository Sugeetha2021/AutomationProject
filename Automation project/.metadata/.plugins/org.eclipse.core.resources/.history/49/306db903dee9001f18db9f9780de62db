package Day2;
 
import org.json.JSONObject;
import org.json.JSONTokener;
import org.testng.annotations.Test;
import static io.restassured.RestAssured.*;
import static io.restassured.matcher.RestAssuredMatchers.*;
import static org.hamcrest.Matchers.*;
 
import java.io.File;
import java.io.FileReader;
import java.nio.file.Paths;
import java.io.FileNotFoundException;
import java.util.HashMap;
 
//1) POST request body using HashMap
public class waystocreatepostrequestbody {
//@Test(priority=1)
	void testPostusingHashmap()
	{
		HashMap data=new HashMap();
		data.put("name","sivaji");
		data.put("location","Tirupati");
		String courseArr[]= {"C++","RestAPI"};
		data.put("courses", courseArr);
		given()
		 .header("Content-Type","application/json; charset=utf-8")
		.contentType("application/json")
		.body(data)
		.when()
		  .post("http://localhost:3000/students")
		.then()
		  .statusCode(201)
		  .body("name",equalTo("sivaji"))
		  .body("location",equalTo("Tirupati"))
		  .body("courses[0]",equalTo("C++"))
		  .body("courses[1]",equalTo("RestAPI"))
		  .log().all();
		}
 
//@Test(priority=2)
void testDelete()
{
	given()
	.when()
	.delete("http://localhost:3000/students/f0e4")
	.then()
	.statusCode(200);
}
 
 
//2)Post request body using org.json
//@Test(priority=3)
	void testPostusingJsonLibrary()
	{
		JSONObject data = new JSONObject();
		data.put("name","sivaji");
		data.put("location","Tirupati");
		String courseArr[]= {"C++","RestAPI"};
		data.put("courses", courseArr);
		given()
		.header("Content-Type","application/json; charset=utf-8")
		.contentType("application/json")
		.body(data.toString())
		.when()
		  .post("http://localhost:3000/students")
		.then()
		  .statusCode(201)
		  .body("name",equalTo("sivaji"))
		  .body("location",equalTo("Tirupati"))
		  .body("courses[0]",equalTo("C++"))
		  .body("courses[1]",equalTo("RestAPI"))
		  .log().all();
		}
	//@Test
void testDelete1()
{
	given()
	.when()
	.delete("http://localhost:3000/students/ac05")
	.then()
	.statusCode(200);
}
//3)Using POJO
	@Test(priority=4)
	void testPostusingPOJO()
	{
		Pojo_PostRequest data=new Pojo_PostRequest();
		data.setName("sivaji");
		data.setLocation("Tirupati");
		String courseArr[]= {"C++","RestAPI"};
		data.setCourses(courseArr);
		given()
		.header("Content-Type","application/json; charset=utf-8")
		.contentType("application/json")
		.body(data)
		.when()
		  .post("http://localhost:3000/students")
		.then()
		  .statusCode(201)
		  .body("name",equalTo("sivaji"))
		  .body("location",equalTo("Tirupati"))
		  .body("courses[0]",equalTo("C++"))
		  .body("courses[1]",equalTo("RestAPI"))
		  .log().all();
		}
	//@Test
	void testDelete2()
	{
		given()
		.when()
		.delete("http://localhost:3000/students/ac05")
		.then()
		.statusCode(200);
	}
	//4)external json file data
	//@Test
	void testPostusingExternalJsonFile() throws FileNotFoundException
	{
		File file=new File(".\\body.json");
		//File f = Paths.get("./body.json").toFile();
		FileReader fr=new FileReader(file);
		JSONTokener jt=new JSONTokener(fr);
		JSONObject data=new JSONObject(jt);
	given()
	.contentType("application/json")
	.body(data.toString())
 
	.when()
	  .post("http://localhost:3000/students")
	.then()
	  .statusCode(201)
	  .body("name",equalTo("sivaji"))
	  .body("location",equalTo("Tirupati"))
	  .body("courses[0]",equalTo("C++"))
	  .body("courses[1]",equalTo("RestAPI"))
	  //.header("Content-Type","application/json; charset=utf-8")
	  .log().all();
	}
 
	//@Test
void testDelete3()
{
	given()
	.when()
	.delete("http://localhost:3000/students/ac05")
	.then()
	.statusCode(200);
}

}
	
	
	